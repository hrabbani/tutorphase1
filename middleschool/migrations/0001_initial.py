# Generated by Django 3.1.7 on 2021-08-08 13:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Academicadvisor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200)),
                ('email', models.EmailField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('inactive', 'inactive'), ('connected', 'connected'), ('disconnected', 'disconnected')], max_length=200)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('flag', models.BooleanField(default=False)),
                ('note', models.TextField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Parentlanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('tutor', 'tutor'), ('student', 'student')], max_length=200, null=True)),
                ('avatar', models.ImageField(default='avatar.png', upload_to='avatars/')),
                ('first_name', models.CharField(blank=True, max_length=200)),
                ('last_name', models.CharField(blank=True, max_length=200)),
                ('email', models.EmailField(blank=True, max_length=200)),
                ('student_grade', models.CharField(blank=True, choices=[('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12')], max_length=200, null=True)),
                ('grade', models.CharField(blank=True, choices=[('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('Not in grade school', 'Not in grade school')], max_length=200, null=True)),
                ('academic_advisor_email', models.EmailField(blank=True, max_length=200)),
                ('school', models.CharField(blank=True, max_length=200)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('flag', models.BooleanField(default=False)),
                ('parent1_first_name', models.CharField(blank=True, max_length=200)),
                ('parent1_last_name', models.CharField(blank=True, max_length=200)),
                ('parent1_phone', models.CharField(blank=True, max_length=200)),
                ('parent1_email', models.EmailField(blank=True, max_length=200)),
                ('student_capacity', models.IntegerField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=200)),
                ('question', models.TextField(blank=True, max_length=1000, null=True)),
                ('comfortable_share_phone', models.BooleanField(default=False)),
                ('permission_share_grade', models.BooleanField(default=False)),
                ('optional_school_loop_profile_link', models.TextField(blank=True, max_length=500, null=True)),
                ('optional_school_loop_username', models.TextField(blank=True, max_length=500, null=True)),
                ('optional_school_loop_password', models.TextField(blank=True, max_length=500, null=True)),
                ('parent_languages', models.CharField(blank=True, choices=[('English', 'English'), ('Spanish', 'Spanish')], max_length=200, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('ethnic', models.CharField(blank=True, choices=[('African American or Black', 'African American or Black'), ('American Indian or Alaskan Native', 'American Indian or Alaskan Native'), ('Asian American', 'Asian American'), ('Caucasian or White', 'Caucasian or White'), ('Hispanic or Latino', 'Hispanic or Latino'), ('Native Hawaiian or Other Pacific Islander', 'Native Hawaiian or Other Pacific Islander'), ('I prefer not to say', 'I prefer not to say')], max_length=200, null=True)),
                ('note', models.TextField(blank=True, max_length=1000, null=True)),
                ('academic_advisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='academic_advisor', to='middleschool.academicadvisor')),
                ('friends', models.ManyToManyField(blank=True, related_name='_profile_friends_+', to='middleschool.Profile')),
                ('interest', models.ManyToManyField(blank=True, related_name='interest', to='middleschool.Interest')),
                ('languages', models.ManyToManyField(blank=True, related_name='subjects', to='middleschool.Language')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Subjectcalculation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200)),
                ('updated', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Support',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meet', models.IntegerField(blank=True, null=True)),
                ('length', models.FloatField(blank=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('help', models.TextField(blank=True, max_length=1000, null=True)),
                ('othersupport', models.CharField(blank=True, max_length=200, null=True)),
                ('rate', models.IntegerField(blank=True, null=True)),
                ('productivity', models.IntegerField(blank=True, null=True)),
                ('question', models.TextField(blank=True, max_length=1000, null=True)),
                ('disconnect', models.CharField(blank=True, choices=[('yes', 'yes'), ('no', 'no')], max_length=200, null=True)),
                ('submit_status', models.BooleanField(default=False)),
                ('flag', models.BooleanField(default=False)),
                ('reason_disconnect', models.TextField(blank=True, max_length=1000, null=True)),
                ('urgent_check', models.BooleanField(default=False)),
                ('connection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='middleschool.connection')),
                ('subjects', models.ManyToManyField(blank=True, related_name='sessionsubjects', to='middleschool.Subject')),
                ('support', models.ManyToManyField(blank=True, related_name='supports', to='middleschool.Support')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(blank=True, max_length=1000, null=True)),
                ('action', models.BooleanField(default=False)),
                ('status', models.CharField(blank=True, choices=[('UNANSWERED', 'UNANSWERED'), ('ADDRESSED', 'ADDRESSED')], max_length=200, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('source', models.CharField(blank=True, max_length=200, null=True)),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tutor_question', to='middleschool.profile')),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='subjects',
            field=models.ManyToManyField(blank=True, related_name='subjects', to='middleschool.Subject'),
        ),
        migrations.AddField(
            model_name='connection',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student', to='middleschool.profile'),
        ),
        migrations.AddField(
            model_name='connection',
            name='tutor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tutor', to='middleschool.profile'),
        ),
    ]
